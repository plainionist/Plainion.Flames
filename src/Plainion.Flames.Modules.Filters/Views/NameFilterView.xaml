<UserControl x:Class="Plainion.Flames.Modules.Filters.Views.NameFilterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:pn="http://github.com/ronin4net/plainion"
             xmlns:m="clr-namespace:Plainion.Flames.Modules.Filters.Model"
             x:ClassModifier="internal"
             x:Name="_this">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Plainion.Prism;component/Resources/Templates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel LastChildFill="True">
        <Grid DockPanel.Dock="Top" MinHeight="150">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ListView Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="100" SelectionMode="Single" 
                  ItemsSource="{Binding Filters}" SelectedItem="{Binding SelectedFilter, Mode=TwoWay}">
                <ListView.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding DeleteFilterCommand}" />
                    <KeyBinding Key="Up" Modifiers="Control" Command="{Binding MoveFilterUpCommand}" />
                    <KeyBinding Key="Down" Modifiers="Control" Command="{Binding MoveFilterDownCommand}" />
                </ListView.InputBindings>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Command="{Binding DeleteFilterCommand}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Label" Width="{Binding ElementName=myColumnStretchHelper, Path=ActualWidth}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Label}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  x:Name="IsAppliedCol" Width="70" Header="Applied" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsApplied, Mode=TwoWay}" Margin="0"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn  x:Name="IsShowCol" Width="70" Header="Show" >
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsShowFilter, Mode=TwoWay}" Margin="0"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center">
                <Button Content="Up" Margin="3,3,0,3" Command="{Binding MoveFilterUpCommand}"/>
                <Button Content="Down" Margin="3,3,0,3" Command="{Binding MoveFilterDownCommand}"/>
            </StackPanel>
            <!-- http://social.msdn.microsoft.com/Forums/vstudio/en-US/3ee5696c-4f26-4e30-8891-0e2f95d69623/gridview-last-column-to-fill-available-space?forum=wpf -->
            <!--This is the hidden helper Grid which does the resizing -->
            <Grid Visibility="Hidden">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{Binding ElementName=IsAppliedCol, Path=ActualWidth}"/>
                    <ColumnDefinition Width="{Binding ElementName=IsShowCol, Path=ActualWidth}"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>
                <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
                <Grid Grid.Column="0" x:Name="myColumnStretchHelper"/>
            </Grid>
        </Grid>

        <DockPanel LastChildFill="True" >
            <Grid DockPanel.Dock="Top"  HorizontalAlignment="Stretch" Margin="0,5,0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type m:FilterTarget}" x:Key="FilterTargets">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="m:FilterTarget" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </Grid.Resources>

                <ComboBox Grid.Column="0" ItemsSource="{Binding Source={StaticResource FilterTargets}, Mode=OneTime}"
                          SelectedItem="{Binding FilterTarget}"/>

                <pn:SearchTextBox Grid.Column="1" SearchMode="Instant" 
                          Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                          Validation.ErrorTemplate="{StaticResource HighlightErrorsWithBorder}"
                          SearchEventTimeDelay="0" 
                          LabelText="Enter regular expression filter">
                    <i:Interaction.Behaviors>
                        <pn:TextBoxRaiseCommandOnEnterBehavior Command="{Binding AddCommand}"/>
                    </i:Interaction.Behaviors>
                </pn:SearchTextBox>
                <Button  Grid.Column="2" Content="Add"  Command="{Binding AddCommand}" Margin="5,0,0,0"/>
            </Grid>
            <StackPanel DockPanel.Dock="Bottom">
                <CheckBox Margin="0,5,0,0" Content="Preview unmatched items only" IsChecked="{Binding PreviewUnmatchedItemsOnly}"/>
            </StackPanel>
            <ListView Name="myPreview" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                      MinHeight="100" 
                      VirtualizingPanel.IsVirtualizing="True"
                      ItemsSource="{Binding PreviewItems}" SelectedItem="{Binding SelectedPreviewItem}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Background="Transparent" Orientation="Horizontal">
                            <TextBlock Text="{Binding}" />

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <prism:InvokeCommandAction Command="{Binding ElementName=_this, Path=DataContext.MouseDownCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </DockPanel>
    </DockPanel>
</UserControl>
